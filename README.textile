h1. Rails CKEditor integration plugin with SWFUpload support

CKEditor is a text editor to be used inside web pages. It's a WYSIWYG editor, which means that the text being edited on it looks as similar as possible to 
the results users have when publishing it. It brings to the web common editing features found on desktop editing applications like Microsoft Word and OpenOffice.

Because CKEditor is licensed under flexible Open Source and commercial licenses, you'll be able to integrate and use it inside any kind of application. 
This is the ideal editor for developers, created to provide easy and powerful solutions to their users.

CKEditor version: 3.2.1
SWFUpload version: 2.2.0.1 Core
Rails version: 3.0.0.beta3

"ckeditor.com":http://ckeditor.com/
"swfupload.org":http://swfupload.org/

Demo appication:
"rails-ckeditor-demo-app":http://github.com/galetahub/rails-ckeditor-demo-app

h2. Install

h3. Rails 3

In "Gemfile":
@gem 'ckeditor', '3.2.2'@

Copy ckeditor js files and generate configuration file
Check @config/initializers/ckeditor.rb@ for more configuration options

@rails generate ckeditor_core@

Generate ckeditor models for file upload support

For paperclip:
@rails generate ckeditor_models@

For attachment_fu:
@rails generate ckeditor_models --backend=attachment_fu@

@rake db:migarte@

h3. Rails 2.x

@./script/plugin install git://github.com/galetahub/rails-ckeditor.git@

@rake ckeditor:install@

@rake ckeditor:config@

Last rake generated file config/ckeditor.yml:

For attachment_fu: @swf_file_post_name: "uploaded_data"@

h2. Usage

Basically include this in the page you wish to use the editor in
<pre><code>
  <%= javascript_include_tag :ckeditor %>
</code></pre>

Then instead of the normal textarea helper from Rails use this one
<pre><code>
  <%= ckeditor_textarea("object", "field", :width => '100%', :height => '200px') %>
</code></pre>

FormBuilder helper for more usefully 

<pre><code>  
  <%= form_for :page, :url => pages_path do |form| -%>
    ...
    <%= form.cktext_area :notes, :toolbar=>'Full', :width=>'400px', :heigth=>'200px' %>
    ...
    <%= form.cktext_area :content, :swf_params=>{:assetable_type=>'User', :assetable_id=>current_user.id} %>
    ...
  <% end -%>
</code></pre>
  
h3. Support options
<pre><code> 
  :cols    # Textarea cols
  :rows    # Textarea rows
  :width   # Editor width
  :height  # Editor height
  :class   # Textarea css class name
  :toolbar # Toolbar name
  :skin    # Editor skin
  :language # Editor language
  :swf_params # SWFUpload additional params
</code></pre>

Check @public/javascripts/ckeditor/config.js@ for config default options.
Modify @public/javascripts/ckeditor/contents.css@ - this stylesheet use editor

h3. AJAX

To use a remote form you need to do something like this
<pre><code>
  <%= ckeditor_textarea("note", "text", :ajax => true ) %>
</code></pre>

h3. File uploads

We recommend using a paperclip plugin for file storage and processing images. Controller @../rails-ckeditor/app/controllers/ckeditor_controller.rb@ has actions 
for displaying and uploading files. It uses classes Picture and AttachmentFile, who are descendants of the Asset class. So, your project must have these classes.

"http://github.com/thoughtbot/paperclip":http://github.com/thoughtbot/paperclip

For S3 storage look at @../rails-ckeditor/examples/s3@

h3. Formtastic integration
<pre><code>
  <%= form.input :content, :as => :ckeditor %>
</code></pre>

h3. Middleware

Ckeditor appends middleware ("Ckeditor::Middleware") before session store to 
support swf upload with AuthenticityToken.

@rake middleware@

h2. TODOs

1. Add support for choose filemanager storage
2. More integration upload system
